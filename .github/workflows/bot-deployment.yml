name: BubenBot Deployment

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.100-preview.4.20258.7'

      - uses: actions/checkout@v2

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: dotnet test --no-restore --verbosity normal

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: repo
          path: .

  push_amd64:
    needs: build_and_test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Build and push Docker images
        uses: docker/build-push-action@v1.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: razkev/bubenbot
          dockerfile: Dockerfile
          tags: latest

  push_arm64:
    needs: build_and_test
    runs-on: [self-hosted, Linux, arm64]
    
    steps:
      - uses: actions/checkout@v2
      # login, build and push manually as docker/build-push-action currently only provides linux/amd64 images
      - name: Set up Docker Buildx
        uses: crazy-max/ghaction-docker-buildx@v3
      - name: Docker Login
        uses: Azure/docker-login@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker images
        run: docker buildx build \
              --platform linux/arm64 \
              --output "type=image,push=true" \
              --tag "razkev/bubenbot:arm64v8" \
              --tag "razkev/bubenbot:latest" \
              --file Dockerfile-arm64v8 .

  deploy:
    needs: push_arm64
    runs-on: ubuntu-latest

    steps:
      - name: SSH Remote Commands
        uses: appleboy/ssh-action@v0.1.1
        with:
          host: ${{ secrets.REMOTE_HOST }}
          passphrase: ${{ secrets.PASSPHRASE }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: ~/rebuild_bot.sh